@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@*<ul class="navbar-nav">*@
@if (SignInManager.IsSignedIn(User))
{
            <li class="drop-down"><a class="text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> @User.Identity.Name</a>
                 <ul>
                   
                    <li @*class="nav-item"*@>
                        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                        </form>
                    </li>
                 </ul>
           </li> 
}
else
{

              <li class="drop-down"><a href="">الدخول</a>
                      <ul>
                        <li><a class=" text-dark" asp-controller="NewRegisteredStudents" asp-action="StudentLogin" >دخول الطالبة </a></li>
                         <li><a class=" text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a></li>
                        <li><a class= text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a></li>
                      </ul>
             </li>  @* fix the active tab *@
}
@*</ul>*@
